[
  {
    "objectID": "walkthrough_aj_estimate.html",
    "href": "walkthrough_aj_estimate.html",
    "title": "Hello, Quarto",
    "section": "",
    "text": "Markdown is an easy to read and write text format:\n\nIt’s plain text so works well with version control\nIt can be rendered into HTML, PDF, and more\nLearn more at: https://quarto.org/docs/authoring/"
  },
  {
    "objectID": "walkthrough_aj_estimate.html#markdown",
    "href": "walkthrough_aj_estimate.html#markdown",
    "title": "Hello, Quarto",
    "section": "",
    "text": "Markdown is an easy to read and write text format:\n\nIt’s plain text so works well with version control\nIt can be rendered into HTML, PDF, and more\nLearn more at: https://quarto.org/docs/authoring/"
  },
  {
    "objectID": "walkthrough_aj_estimate.html#code-cell",
    "href": "walkthrough_aj_estimate.html#code-cell",
    "title": "Hello, Quarto",
    "section": "Code Cell",
    "text": "Code Cell\n\n\n&lt;function rtichoke.helpers.sandbox_observable_helpers.create_aj_data_combinations(reference_groups, fixed_time_horizons, stratified_by, by)&gt;\n\n\nHere is a Python code cell:\n\n\npreds_aft\n[0.07752415 0.87002819 0.04775766 0.01027884 0.04226133 0.08800013\n 0.50117748 0.62494945 0.07767816 0.06826886 0.0791379  0.0274158\n 0.12224824 0.05818442 0.06021402 0.71912154 0.04496599 0.54907837\n 0.10962603 0.0392939  0.01977509 0.10245113 0.02973878 0.01698335\n 0.28138902 0.03014649 0.02755518 0.07006472 0.17612977 0.0985209\n 0.02977965 0.06503216 0.03179453 0.10081587 0.06000648 0.58484087\n 0.03363707 0.09765277 0.09518429 0.56472469 0.84318552 0.23152505\n 0.63955924 0.19646387 0.16480929 0.53187365 0.18511909 0.11523153\n 0.11975478 0.0140005  0.26030808 0.09510325 0.02113191 0.418365\n 0.00288671 0.01409477 0.05261377 0.22772931 0.33508777 0.36576042\n 0.05548098 0.00978865 0.79270901 0.02612591 0.27770184 0.02723738\n 0.25114763 0.0346399  0.02601847 0.21358758 0.05045485 0.64702137\n 0.02652048 0.2468378  0.05705776 0.0300551  0.02466456 0.1797585\n 0.04889381 0.25994975 0.02851015 0.03973668 0.04788694 0.03548732\n 0.1820771  0.44873482 0.51998934 0.29634658 0.12298801 0.32482422\n 0.04512323 0.86573978 0.1074998  0.46563892 0.03155759 0.65691045\n 0.06316067 0.00373701 0.29494675 0.62704508 0.14614725 0.30210746\n 0.0417899  0.04903528 0.07607814 0.07014324 0.05782739 0.04311723\n 0.14763617 0.10794151 0.93626733 0.08805321 0.03124222 0.09314867\n 0.00939935 0.48565035 0.38049937 0.26701599 0.03779806 0.53336239\n 0.11762426 0.40369529 0.1150086  0.27087889 0.17383671 0.09572575\n 0.08397943 0.11383605 0.01006774 0.16714244 0.32739878 0.03331229\n 0.02344453 0.59154292 0.07758743 0.18707721 0.1167972  0.1539204\n 0.36501548 0.04331717 0.02642396 0.02805243 0.12145345 0.01587416\n 0.73774531 0.07889136 0.08413644 0.0600921  0.56557644 0.10837811\n 0.01364603 0.51742398 0.03218581 0.08808302 0.42867125 0.15544658\n 0.11195439 0.22163121 0.02795519 0.10388127 0.87109265 0.07921247\n 0.05002129 0.44818706 0.04661589 0.32575793 0.12570459 0.91117636\n 0.12394934 0.15417477 0.04423145 0.54392331 0.01286839 0.20265962\n 0.07326281 0.26384754 0.01791479 0.02084478 0.24116562 0.02851005\n 0.08546898 0.05856462 0.11970734 0.06551036 0.02879117 0.25981076\n 0.03701142 0.113722   0.0210533  0.02661716 0.11212248 0.20000019\n 0.45598704 0.15777635 0.08114113 0.54196135 0.09962835 0.86467799\n 0.08599654 0.05825941 0.45196103 0.36884124 0.25590988 0.01999809\n 0.01496162 0.01286635 0.92894488 0.34459902 0.01400606 0.14941479\n 0.14160609 0.88174146 0.01530489 0.21287717 0.01092101 0.08292189\n 0.05900192 0.56036538 0.4569502  0.14709764 0.01802121 0.04009111\n 0.09442895 0.10526448 0.02953157 0.08711924 0.04216808 0.06903772\n 0.18536733 0.05515834 0.55527119 0.05263327 0.03290563 0.04523124\n 0.09950271 0.70411719 0.20368881 0.01939356 0.00236174 0.04477949\n 0.00692447 0.09249717 0.99343325 0.40107202 0.0088305  0.46430709\n 0.34523762 0.50167919 0.01431048 0.34315417 0.04652978 0.01800206\n 0.45263142 0.0077884  0.00555678 0.11036347 0.15473668 0.79699123\n 0.06519828 0.39144739 0.25854595 0.02310237 0.23124493 0.01182932\n 0.2107509  0.08475371 0.61838898 0.10438845 0.37785288 0.03825425\n 0.05153895 0.08551023 0.11827386 0.08422535 0.57663192 0.1217257\n 0.03899419 0.36993859 0.21281804 0.05989711 0.0572246  0.02507269\n 0.11828969 0.06569706 0.07425643 0.19548558 0.99923069 0.20443606\n 0.95651624 0.20717155 0.99998808 0.10816345 0.03536646 0.23477315\n 0.01911476 0.03832076 0.13737146 0.14293711 0.05045361 0.24526636\n 0.09854343 0.0696841  0.04567147 0.09400611 0.26412146 0.01414742\n 0.09373585 0.03129709 0.06199405 0.02868438 0.05661902 0.35046708\n 0.08011334 0.04353503 0.98032567 0.4722177  0.40721396 0.17131571\n 0.24305928 0.09853502 0.01340513 0.11404734 0.17000744 0.12197763\n 0.11427484 0.63740139 0.23173725 0.05988144 0.6535161  0.11444982\n 0.05714303 0.16621505 0.07888326 0.0138423  0.25160888 0.12066559\n 0.22732107 0.13508465 0.01996261 0.06586699 0.0361568  0.32327149\n 0.01431505 0.19006616 0.01163093 0.0392753  0.02933657 0.03953855\n 0.01851007 0.05309774 0.0210003  0.07661862 0.08912496 0.05610244\n 0.02033111 0.1472653  0.03878189 0.06186257 0.42904514 0.21415035\n 0.38752706 0.02967115 0.24175966 1.         0.75946929 0.21671906\n 0.03649572 0.26551556 0.60074204 0.63618455 0.17119637 0.07842007\n 0.16545291 0.05833199 0.22371301 0.04061435 0.06129364 0.76434491\n 0.19019111 0.08973108 0.10558534 0.18972227 0.12508695 0.3947685\n 0.13823802 0.24033012 0.41280182 0.23232836 0.0338607  0.03342983\n 0.16385535 0.02344022 0.11169256 0.03059461 0.47147037 0.03113941\n 0.18336843 0.25625964 0.05249732 0.01543196 0.1339377  0.10220719\n 0.06440717 0.3225317  0.19073202 0.15345512 0.37025388 0.11326792\n 0.23632106 0.01663411 0.44359979 0.16062102 0.00934317 0.92530548\n 0.05191594 0.04384712 0.99999999 0.67038168 0.01747817 0.21103391\n 0.06238224 0.18522796 0.16150667 0.14540498 0.02459998 0.14937843\n 0.0324419  0.05128565 0.28689048 0.62848966 0.073675   0.25747933\n 0.02864336 0.07954061 0.05978777 0.01367165 0.35995117 0.13072646\n 0.90075563 0.20772401 0.44418905 0.03384817 0.47668776 0.43065644\n 0.02419177 0.09077814 0.11215557 0.16823768 0.02074082 0.00914215\n 0.14723205 0.0869164  0.16267021 0.64164268 0.79982865 0.25175144\n 0.01026874 0.02310919 0.00298843 0.01896705 0.01880696 0.02819101\n 0.11027641 0.0374426  0.03373036 0.82330566 0.01388315 0.12669967\n 0.3169125  0.81201292 0.0059839  0.99999883 0.03841133 0.04317335\n 0.43055586 0.11127712 0.06093304 0.02919345 0.80974779 0.09736986\n 0.03182366 0.10228218 0.86418748 0.07226557 0.1138955  0.11415673\n 0.04792051 0.05631728 0.97226531 0.01486595 0.12923749 0.33723101\n 0.04715738 0.60399713 0.27046267 0.04054221 0.00411368 0.02556357\n 0.0915975  0.06482984 0.1006348  0.50113374 0.47637631 0.10873407\n 0.47142068 0.11497897 0.06208742 0.11203004 0.04823854 0.03627733\n 0.1460925  0.17172989 0.51605277 0.55654032 0.00100766 0.03026357\n 0.52309649 0.18334418 0.14566192 0.20383535 0.0467928  0.04313303\n 0.03143972 0.99500635 0.02429307 0.01553679 0.08502927 0.03138396\n 0.07147768 0.18246694 0.42441711 0.18565851 0.99541537 0.13815227\n 0.03858334 0.02191384 0.03307778 0.25650774 0.17687088 0.74573386\n 0.14824153 0.02085769 0.17380798 0.97795069 0.01543118 0.34674959\n 0.04923656 0.02504326 0.03161586 0.05612044 0.05311244 0.16316882\n 0.43213392 0.36883403 0.05853719 0.1161428  0.15064338 0.86539872\n 0.01490374 1.         0.00510538 0.32222617 0.35186878 0.04972303\n 0.05300839 0.08796145 0.56789437 0.06493934 0.01445186 0.57246664\n 0.00509569 0.04753861 0.35971538 0.03071368 0.05376827 0.45690467\n 0.95962883 0.7305147  0.75814496 0.28581876 0.02447182 0.34594317\n 0.17123135 0.60514773 0.99996137 0.19842085 0.05073017 0.01897384\n 0.644755   0.29653087 0.3878532  0.01007202 0.04922936 0.2527082\n 0.12958322 0.07373451 0.02029336 0.08604211 0.02107746 0.48726717\n 0.01108353 0.08751893 0.18566869 0.02486262 0.56364203 0.66807614\n 0.12021849 0.06377044 0.06471137 0.07096026 0.14223361 0.01582322\n 0.10558076 0.02155359 0.13173897 0.25668798 0.4633584  0.05330563\n 0.04344736 0.57603432 0.11898993 0.7103866  0.09356884 0.05983696\n 0.11910362 0.65914044 0.24567485 0.02304112 0.00940886 0.2114537\n 0.06703528 0.07870687 0.19596144 0.70303616 0.11468791 0.39866959\n 0.0141278  0.83970228 0.36888891 0.19990554 0.00735147 0.38268375\n 0.03719533 0.38968218 0.4603922  0.48429867 0.06274754 0.17984934\n 0.29439822 0.06575887 0.14106735 0.13790457 0.04988546 0.36568417\n 0.79231664 0.02720525 0.08513285 0.02242903 0.19886983 0.03184308\n 0.01730139 0.47749946 0.03258777 0.18216346 0.01313201 0.03833579\n 0.55927579 0.08206325 0.26446809 0.12236309 0.41380199 0.1039474\n 0.04527332 0.07895658 0.05910725 0.43939168 0.18408676 0.99999706\n 0.04349581 0.01953448 0.70889571 0.17007808 0.03487243 0.19706199\n 0.45388569 0.55959488 0.01792624 0.12274321 0.18018783 0.00158919\n 0.89724921 0.04570474 0.06103173 0.63932766 0.09382554 0.00867948\n 0.24731145 0.01352736 0.28957719 0.6012087  0.18669728 0.01217729\n 0.01419362 0.15515683 0.12922584 0.4254087  0.10824111 0.13214763\n 0.03020458 0.15332713 0.04792686 0.88630214 0.55668827 0.22102681\n 0.27469414 0.10479254 0.70682757 0.13485631 0.29167217 0.03442904\n 0.28822266 0.06403453 0.14021323 0.12455802 0.05386516 0.25325429\n 0.23635276 0.09355746 0.0238513  0.09700479 0.45416052 0.26261033\n 0.62589097 0.05604203 0.07391376 0.04192368 0.08858367 0.05558323\n 0.10373366 0.03255151 0.04941093 0.01922886 0.97786366 0.03436912\n 0.08055592 0.11545802 0.14440197 0.20525574 0.03486696 0.02802559]\npred_thin\n0      0.988965\n1      0.524577\n2      0.991665\n3      0.994338\n4      0.992105\n         ...   \n745    0.984451\n746    0.980313\n747    0.967938\n748    0.992703\n749    0.993183\nLength: 750, dtype: float64\npreds_aft and pred_thin are not identical in form.\n\n\n\n\n\n\n\n\n\n\n\nviewof time_horizon = Inputs.range(\n  [1, 5], \n  {value: 3, step: 2, label: \"Time Horizon:\"}\n)\n\nviewof reference_group = Inputs.radio(\n  reference_groups_data, {label: \"Reference Group\"}, {value: 'thin'}\n)\n\nviewof stratified_by = Inputs.radio(\n  [\"probability_threshold\", \"ppcr\"], {value: \"probability_threshold\", label: \"Stratified By\"}\n)\n\nviewof censored_assumption = Inputs.radio(\n  [\"excluded\", \"adjusted\"], {value: \"excluded\", label: \"Censored Assumption\"}\n)\n\nviewof competing_assumption = Inputs.radio(\n  [\"excluded\", \"adjusted_as_negative\", \"adjusted_as_censored\", \"reals\"], {value: \"excluded\", label: \"Competing Assumption\"}\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfiltered = transpose(data).filter(function(subset) {\n\n  return time_horizon == subset.fixed_time_horizon &&\n         censored_assumption == subset.censoring_assumption &&\n         competing_assumption == subset.competing_assumption &&\n         stratified_by === subset.stratified_by && \n         reference_group === subset.reference_group;\n})\n\nfiltered\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlot.plot({\n  marks: [\n    Plot.barY(filtered, { \n      x: \"strata\", \n      y: \"reals_estimate\", \n      fill: \"reals\", \n      tip: true \n    })\n  ],\n  color: {\n    domain: [\"real_positives\", \"real_competing\", \"real_negatives\", \"real_censored\"], \n    range: [\"#009e73\", \"#9DB4C0\", \"#FAC8CD\", \"#E3F09B\"],\n    legend: true\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstrata\n\n\n\n\n0\n(0.99, 1.0]\n\n\n1\n(0.99, 1.0]\n\n\n2\n(0.99, 1.0]\n\n\n3\n(0.99, 1.0]\n\n\n4\n(0.99, 1.0]\n\n\n...\n...\n\n\n3943\n0.93\n\n\n3944\n0.93\n\n\n3945\n0.93\n\n\n3946\n0.93\n\n\n3947\n0.93\n\n\n\n\n3948 rows × 1 columns"
  },
  {
    "objectID": "reference/plot_precision_recall_curve.html",
    "href": "reference/plot_precision_recall_curve.html",
    "title": "plot_precision_recall_curve",
    "section": "",
    "text": "plot_precision_recall_curve\nplot_precision_recall_curve(\n    performance_data,\n    size=None,\n    color_values=None,\n    url_api='http://localhost:4242/',\n)\nPlot Precision Recall Curve\nArgs: performance_data (DataFrame): description size (Optional[int], optional): description. Defaults to None. color_values (List[str], optional): description. Defaults to None. url_api (type, optional): description. Defaults to “http://localhost:4242/”.\nReturns: Figure: description",
    "crumbs": [
      "Discrimination",
      "plot_precision_recall_curve"
    ]
  },
  {
    "objectID": "reference/create_gains_curve.html",
    "href": "reference/create_gains_curve.html",
    "title": "create_gains_curve",
    "section": "",
    "text": "create_gains_curve\ncreate_gains_curve(\n    probs,\n    reals,\n    by=0.01,\n    stratified_by='probability_threshold',\n    size=None,\n    color_values=None,\n    url_api='http://localhost:4242/',\n)\nCreate Gains Curve\nArgs: probs (Dict[str, List[float]]): description reals (Dict[str, List[int]]): description by (float, optional): description. Defaults to 0.01. stratified_by (str, optional): description. Defaults to “probability_threshold”. size (Optional[int], optional): description. Defaults to None. color_values (List[str], optional): description. Defaults to None. url_api (type, optional): description. Defaults to “http://localhost:4242/”.\nReturns: Figure: description",
    "crumbs": [
      "Discrimination",
      "create_gains_curve"
    ]
  },
  {
    "objectID": "example.html",
    "href": "example.html",
    "title": "Example usage",
    "section": "",
    "text": "To use rtichoke in a project:\n\nimport rtichoke\n\nprint(rtichoke.__version__)\n\n\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[2], line 1\n----&gt; 1 import rtichoke\n      3 print(rtichoke.__version__)\n\nModuleNotFoundError: No module named 'rtichoke'\n\n\n\n\nimport pandas as pd\nimport json\nimport requests\nfrom sklearn.datasets import make_classification\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nimport numpy as np\n\nlr = LogisticRegression()\nx = np.arange(10).reshape(-1, 1)\ny = np.array([0, 1, 0, 0, 1, 1, 1, 0, 0, 1])\n\nx_test = np.arange(7).reshape(-1, 1)\ny_test = np.array([1, 0, 1, 0, 1, 0, 0])\n\nmodel = LogisticRegression(solver=\"liblinear\", random_state=0)\nlasso = LogisticRegression(solver=\"liblinear\", penalty=\"l1\", random_state=0)\n\nmodel.fit(x, y)\nlasso.fit(x_test, y_test)\n\nprobs_dict_for_examples = {\n    \"One Model\": {\"Logistic Regression\": model.predict_proba(x)[:, 1].tolist()},\n    \"Multiple Models\": {\n        \"Logistic Regression\": model.predict_proba(x)[:, 1].tolist(),\n        \"Lasso\": lasso.predict_proba(x)[:, 1].tolist(),\n    },\n    \"Multiple Populations\": {\n        \"Train\": model.predict_proba(x)[:, 1].tolist(),\n        \"Test\": model.predict_proba(x_test)[:, 1].tolist(),\n    },\n}\n\nreals_dict_for_examples = {\n    \"One Model\": {\"Logistic Regression\": y.tolist()},\n    \"Multiple Models\": {\"Reals\": y.tolist()},\n    \"Multiple Populations\": {\"Train\": y.tolist(), \"Test\": y_test.tolist()},\n}\n\n\n\nperformance_datas = [\n    rtichoke.prepare_performance_data(\n        probs=probs_dict_for_examples[x],\n        reals=reals_dict_for_examples[x],\n        stratified_by=stratified_by,\n        url_api=\"http://127.0.0.1:7644/\",\n    )\n    for x in probs_dict_for_examples.keys()\n    for stratified_by in [\"probability_threshold\", \"ppcr\"]\n]\n\nperformance_datas[0]\n\ndict_keys(['probability_threshold', 'TP', 'TN', 'FN', 'FP', 'sensitivity', 'FPR', 'specificity', 'PPV', 'NPV', 'lift', 'predicted_positives', 'NB', 'ppcr'])\ndict_keys(['probability_threshold', 'ppcr', 'TP', 'TN', 'FN', 'FP', 'sensitivity', 'FPR', 'specificity', 'PPV', 'NPV', 'lift', 'predicted_positives'])\ndict_keys(['model', 'probability_threshold', 'TP', 'TN', 'FN', 'FP', 'sensitivity', 'FPR', 'specificity', 'PPV', 'NPV', 'lift', 'predicted_positives', 'NB', 'ppcr'])\ndict_keys(['model', 'probability_threshold', 'ppcr', 'TP', 'TN', 'FN', 'FP', 'sensitivity', 'FPR', 'specificity', 'PPV', 'NPV', 'lift', 'predicted_positives'])\ndict_keys(['population', 'probability_threshold', 'TP', 'TN', 'FN', 'FP', 'sensitivity', 'FPR', 'specificity', 'PPV', 'NPV', 'lift', 'predicted_positives', 'NB', 'ppcr'])\ndict_keys(['population', 'probability_threshold', 'ppcr', 'TP', 'TN', 'FN', 'FP', 'sensitivity', 'FPR', 'specificity', 'PPV', 'NPV', 'lift', 'predicted_positives'])\n\n\n\n\n\n\n\n\n\nprobability_threshold\nTP\nTN\nFN\nFP\nsensitivity\nFPR\nspecificity\nPPV\nNPV\nlift\npredicted_positives\nNB\nppcr\n\n\n\n\n0\n0.00\n5\n0\n0\n5\n1.0\n1.0\n0.0\n0.5\nNaN\n1.0\n10\n0.5000\n1.0\n\n\n1\n0.01\n5\n0\n0\n5\n1.0\n1.0\n0.0\n0.5\nNaN\n1.0\n10\n0.4949\n1.0\n\n\n2\n0.02\n5\n0\n0\n5\n1.0\n1.0\n0.0\n0.5\nNaN\n1.0\n10\n0.4898\n1.0\n\n\n3\n0.03\n5\n0\n0\n5\n1.0\n1.0\n0.0\n0.5\nNaN\n1.0\n10\n0.4845\n1.0\n\n\n4\n0.04\n5\n0\n0\n5\n1.0\n1.0\n0.0\n0.5\nNaN\n1.0\n10\n0.4792\n1.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n96\n0.96\n0\n5\n5\n0\n0.0\n0.0\n1.0\nNaN\n0.5\nNaN\n0\n0.0000\n0.0\n\n\n97\n0.97\n0\n5\n5\n0\n0.0\n0.0\n1.0\nNaN\n0.5\nNaN\n0\n0.0000\n0.0\n\n\n98\n0.98\n0\n5\n5\n0\n0.0\n0.0\n1.0\nNaN\n0.5\nNaN\n0\n0.0000\n0.0\n\n\n99\n0.99\n0\n5\n5\n0\n0.0\n0.0\n1.0\nNaN\n0.5\nNaN\n0\n0.0000\n0.0\n\n\n100\n1.00\n0\n5\n5\n0\n0.0\n0.0\n1.0\nNaN\n0.5\nNaN\n0\nNaN\n0.0\n\n\n\n\n101 rows × 14 columns\n\n\n\n\nroc_curves = [\n    rtichoke.create_roc_curve(\n        probs=probs_dict_for_examples[x],\n        reals=reals_dict_for_examples[x],\n        size=600,\n        stratified_by=stratified_by,\n        url_api=\"http://127.0.0.1:7644/\",\n    )\n    for x in probs_dict_for_examples.keys()\n    for stratified_by in [\"probability_threshold\", \"ppcr\"]\n]\n\n# roc_curves[0].show(config={'displayModeBar': False})\n# roc_curves[1].show(config={'displayModeBar': False})\n# roc_curves[2].show(config={'displayModeBar': False})\n# roc_curves[3].show(config={'displayModeBar': False})\nroc_curves[4].show(config={'displayModeBar': False})\n# roc_curves[5].show(config={'displayModeBar': False})"
  },
  {
    "objectID": "conduct.html",
    "href": "conduct.html",
    "title": "My Documentation Site",
    "section": "",
    "text": "lgbqfipfd ../CONDUCT.md"
  },
  {
    "objectID": "changelog.html",
    "href": "changelog.html",
    "title": "My Documentation Site",
    "section": "",
    "text": "cmjpotdac ../CHANGELOG.md"
  },
  {
    "objectID": "contributing.html",
    "href": "contributing.html",
    "title": "My Documentation Site",
    "section": "",
    "text": "hwodalhmo ../CONTRIBUTING.md"
  },
  {
    "objectID": "reference/create_calibration_curve.html",
    "href": "reference/create_calibration_curve.html",
    "title": "create_calibration_curve",
    "section": "",
    "text": "create_calibration_curve\ncreate_calibration_curve(\n    probs,\n    reals,\n    calibration_type='discrete',\n    size=None,\n    color_values=None,\n    url_api='http://localhost:4242/',\n)\nCreates Calibration Curve\nArgs: probs (Dict[str, List[float]]): description reals (Dict[str, List[int]]): description calibration_type (str, optional): description. Defaults to “discrete”. size (Optional[int], optional): description. Defaults to None. color_values (List[str], optional): description. Defaults to None. url_api (type, optional): description. Defaults to “http://localhost:4242/”.\nReturns: Figure: description",
    "crumbs": [
      "Calibration",
      "create_calibration_curve"
    ]
  },
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "Function reference",
    "section": "",
    "text": "Functions to inspect docstrings.\n\n\n\ncreate_calibration_curve\nCreates Calibration Curve\n\n\n\n\n\n\nFunctions to inspect docstrings.\n\n\n\ncreate_gains_curve\nCreate Gains Curve\n\n\nplot_precision_recall_curve\nPlot Precision Recall Curve",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "reference/index.html#calibration",
    "href": "reference/index.html#calibration",
    "title": "Function reference",
    "section": "",
    "text": "Functions to inspect docstrings.\n\n\n\ncreate_calibration_curve\nCreates Calibration Curve",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "reference/index.html#discrimination",
    "href": "reference/index.html#discrimination",
    "title": "Function reference",
    "section": "",
    "text": "Functions to inspect docstrings.\n\n\n\ncreate_gains_curve\nCreate Gains Curve\n\n\nplot_precision_recall_curve\nPlot Precision Recall Curve",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "reference/rtichoke.html",
    "href": "reference/rtichoke.html",
    "title": "rtichoke",
    "section": "",
    "text": "rtichoke\nrtichoke"
  }
]